# =============================================================================
# Docker Compose Configuration for Production
# Agentic Workflow Monorepo
# =============================================================================

version: '3.8'

services:
  # ---------------------------------------------------------------------------
  # Production Database
  # ---------------------------------------------------------------------------
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agentic-network
    restart: always
    # Don't expose ports in production (internal only)

  # ---------------------------------------------------------------------------
  # Production Redis
  # ---------------------------------------------------------------------------
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - agentic-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    restart: always

  # ---------------------------------------------------------------------------
  # Production Backend
  # ---------------------------------------------------------------------------
  backend:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.backend
      target: production
    environment:
      - NODE_ENV=production
      - DJANGO_DEBUG=false
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CORS_ORIGIN=${CORS_ORIGIN}
    volumes:
      - backend_media:/app/media
      - backend_static:/app/staticfiles
    networks:
      - agentic-network
    depends_on:
      - database
      - redis
    restart: always

  # ---------------------------------------------------------------------------
  # Production Frontend
  # ---------------------------------------------------------------------------
  frontend:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.frontend
      target: production
    networks:
      - agentic-network
    depends_on:
      - backend
    restart: always

  # ---------------------------------------------------------------------------
  # Production Nginx
  # ---------------------------------------------------------------------------
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./infra/docker/nginx.conf:/etc/nginx/nginx.conf
      - backend_static:/usr/share/nginx/html/static
      - backend_media:/usr/share/nginx/html/media
      - ./infra/ssl:/etc/nginx/ssl # SSL certificates
    networks:
      - agentic-network
    depends_on:
      - frontend
      - backend
    restart: always

# =============================================================================
# Networks
# =============================================================================
networks:
  agentic-network:
    driver: bridge

# =============================================================================
# Volumes
# =============================================================================
volumes:
  postgres_data:
  redis_data:
  backend_media:
  backend_static:
